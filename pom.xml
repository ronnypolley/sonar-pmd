<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.codehaus.sonar-plugins</groupId>
    <artifactId>parent</artifactId>
    <version>17</version>
  </parent>

  <groupId>org.codehaus.sonar-plugins.java</groupId>
  <artifactId>sonar-pmd-plugin</artifactId>
  <version>2.3-SNAPSHOT</version>
  <packaging>sonar-plugin</packaging>

  <name>SonarQube PMD Plugin</name>
  <description>PMD is a tool that looks for potential problems like possible bugs, dead code, suboptimal code, overcomplicated expressions or duplicate code.</description>
  <inceptionYear>2012</inceptionYear>
  <organization>
    <name>SonarSource</name>
    <url>http://www.sonarsource.com</url>
  </organization>
  <licenses>
    <license>
      <name>GNU LGPL 3</name>
      <url>http://www.gnu.org/licenses/lgpl.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>godin</id>
      <name>Evgeny Mandrikov</name>
      <organization>SonarSource</organization>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:SonarCommunity/sonar-pmd.git</connection>
    <developerConnection>scm:git:git@github.com:SonarCommunity/sonar-pmd.git</developerConnection>
    <url>https://github.com/SonarCommunity/sonar-pmd</url>
    <tag>HEAD</tag>
  </scm>
  <url>http://docs.codehaus.org/x/65S7DQ</url>
  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.codehaus.org/browse/SONARPMD</url>
  </issueManagement>

  <properties>
    <maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>

    <pmd.version>5.1.1</pmd.version>
    <sonar.version>4.2</sonar.version>
    <sonar-java.version>2.1</sonar-java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.sonar-plugins.java</groupId>
      <artifactId>sonar-java-plugin</artifactId>
      <scope>provided</scope>
      <version>${sonar-java.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <scope>provided</scope>
      <version>${sonar.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sourceforge.pmd</groupId>
      <artifactId>pmd</artifactId>
      <version>${pmd.version}</version>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
        <exclusion>
          <!-- optimization for JAR size -->
          <groupId>org.apache.ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xom</groupId>
          <artifactId>xom</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- TODO http://jira.codehaus.org/browse/SONAR-2011
    We need following dependency, otherwise we will receive
    java.lang.NoClassDefFoundError: org/apache/maven/project/MavenProject
    during call mock(org.sonar.api.resources.Project.class)
    -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.0.7</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <scope>test</scope>
      <version>${sonar.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

    <!--
    <dependency>
      <groupId>org.codehaus.sonar.plugins</groupId>
      <artifactId>sonar-l10n-en-plugin</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>${basedir}/src/main/resources</directory>
      </testResource>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.codehaus.sonar</groupId>
        <artifactId>sonar-packaging-maven-plugin</artifactId>
        <configuration>
          <pluginKey>pmd</pluginKey>
          <pluginName>PMD</pluginName>
          <pluginDescription><![CDATA[Analyze Java code with <a href="http://pmd.sourceforge.net/">PMD</a>.]]></pluginDescription>
          <pluginClass>org.sonar.plugins.pmd.PmdPlugin</pluginClass>
          <requirePlugins>java:${sonar-java.version}</requirePlugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-plugin-size</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <rules>
                <requireFilesSize>
                  <maxsize>6000000</maxsize>
                  <minsize>1000000</minsize>
                  <files>
                    <file>${project.build.directory}/${project.build.finalName}.jar</file>
                  </files>
                </requireFilesSize>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
